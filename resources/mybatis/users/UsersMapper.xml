<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UsersMapper">

    <!--mybatis ehcache缓存配置 -->
    <!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
    <!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache" /> -->
    <!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->


	<sql id="Base_Column_List">
    u_id,uName ,uEmail ,uPhone ,uPassword ,uSex ,uHeadImg ,uLoginAreaCode ,uCreateTime ,uLastUpdateTime ,uType ,uScoreNum ,rId
    	,isFroZen,isGAG,uLoginIp,uLoginDate,uLoginCount 
    </sql>

    <resultMap type="com.op.entity.users.Users" id="UsersReturnMap">
      <id column="u_id" property="uId"/>
      <result column="uName" property="uName"/>
      <result column="uEmail" property="uEmail"/>
      <result column="uPhone" property="uPhone"/>
      <result column="uPassword" property="uPassword"/>
      <result column="uSex" property="uSex"/>
      <result column="uHeadImg" property="uHeadImg"/>
      <result column="uLoginAreaCode" property="uLoginAreaCode"/>
      <result column="uCreateTime" property="uCreateTime"/>
      <result column="uLastUpdateTime" property="uLastUpdateTime"/>
      <result column="uType" property="uType"/>
      <result column="uScoreNum" property="uScoreNum"/>
      <result column="rId" property="rId"/>
      <result column="isFroZen" property="isFroZen"/>
      <result column="isGAG" property="isGAG"/>
      <result column="uLoginIp" property="uLoginIp"/>
      <result column="uLoginDate" property="uLoginDate"/>
      <result column="uLoginCount" property="uLoginCount"/>
      
      <!-- 查询角色 -->
      <association property="role" javaType="com.op.entity.authority.Roles" column="rId" select="rolesMapper.findRoleByRId">
	  </association>
   </resultMap>

	<!-- 用户详细信息 -->
   <resultMap type="com.op.entity.users.UserInfo" id="UserInfoReturnMap">
      <id column="u_id" property="uId"/>
      <result column="uName" property="uName"/>
      <result column="uEmail" property="uEmail"/>
      <result column="uPhone" property="uPhone"/>
      <result column="uPassword" property="uPassword"/>
      <result column="uSex" property="uSex"/>
      <result column="uHeadImg" property="uHeadImg"/>
      <result column="uLoginAreaCode" property="uLoginAreaCode"/>
      <result column="uCreateTime" property="uCreateTime"/>
      <result column="uLastUpdateTime" property="uLastUpdateTime"/>
      <result column="uType" property="uType"/>
      <result column="uScoreNum" property="uScoreNum"/>
      <result column="rId" property="rId"/>
      <result column="isFroZen" property="isFroZen"/>
      <result column="isGAG" property="isGAG"/>
      <result column="uLoginIp" property="uLoginIp"/>
      <result column="uLoginDate" property="uLoginDate"/>
      <result column="uLoginCount" property="uLoginCount"/>
      <result column="rName" property="rName"/>
   </resultMap>

   
   <!-- 根据手机号/邮箱登录用户 -->
   <select id="loginUserByPhoneOrEmail" parameterType="com.op.entity.users.Users" resultMap="UsersReturnMap" useCache="false" >
   	SELECT <include refid="Base_Column_List" />
   	FROM users WHERE uPassword=#{uPassword}
   	and (uPhone = #{uPhone} OR uEmail = #{uEmail}  )
   	and uType = 4
   </select>

   <!-- 分页获取用户列表 -->
   <select id="getUsersListPage" parameterType="Page" resultMap="UserInfoReturnMap" >
   	SELECT  u_id,uName ,uEmail ,uPhone ,uSex ,uHeadImg ,uCreateTime,uType,isFroZen,isGAG,uLoginIp,uLoginDate,uLoginCount
   	FROM users WHERE uType NOT IN(4)
	<if test="t.uName != null and t.uName != '' ">
		AND uName LIKE CONCAT(CONCAT('%', #{t.uName}),'%')
	</if>
	<if test="t.uType != 0">
		AND uType =  #{t.uType}
	</if>
   </select>


	

    <resultMap type="com.op.entity.users.Users" id="getOnLineUserByIdsPageMap">
      <id column="u_id" property="uId"/>
   </resultMap>

   <!-- 分页获取在线用户列表 -->
   <select id="getOnLineUserByIdsPage" parameterType="page" resultMap="getOnLineUserByIdsPageMap" >
   	SELECT  u_id,uName ,uEmail ,uPhone ,uSex ,uHeadImg ,uCreateTime,uType,isFroZen,isGAG,uLoginIp,uLoginDate,uLoginCount
   	FROM users WHERE 1=1
	<if test="t.uName != null and t.uName != '' ">
		AND uName LIKE CONCAT(CONCAT('%', #{t.uName}),'%')
	</if>
	<if test="t.uType != 0">
		AND uType =  #{t.uType}
	</if>
	AND u_id IN
	<foreach collection="t.uIds" index="index" item="item" open="(" separator="," close=")" >
	#{t.uIds[${index}]}
	</foreach>
   </select>

   <!-- 分页获取后台管理用户列表 -->
   <select id="getSysListPage" parameterType="Page" resultMap="UserInfoReturnMap" >
   	SELECT  u_id,uName ,uEmail ,uPhone ,uSex ,uHeadImg ,uCreateTime,uType,isFroZen,uLoginIp,uLoginDate,uLoginCount ,rName
   	FROM users u 
   	left join roles r on r.rid = u.rid
   	WHERE uType = 4
	<if test="t.uName != null and t.uName != '' ">
		AND uName LIKE CONCAT(CONCAT('%', #{t.uName}),'%')
	</if>
	AND u_id != '1'
	order by u.rid asc,uCreateTime asc 
   </select>

 	 <!--根据用户ID获取用户详细信息 -->
   <select id="findUserById" parameterType="String" resultMap="UserInfoReturnMap" >
   	SELECT <include refid="Base_Column_List" />
   	FROM users WHERE
   	 u_id = #{userId} 
   	 AND  uType NOT IN(4)
   </select>
 
 
  	 <!--根据系统用户ID获取系统用户详细信息 -->
   <select id="findSysUserById" parameterType="String" resultMap="UserInfoReturnMap" >
	   SELECT u_id,uName ,uEmail ,uPhone ,uPassword ,uSex ,uHeadImg ,uLoginAreaCode ,uCreateTime ,uLastUpdateTime ,uType ,uScoreNum ,r.rId
    	,isFroZen,isGAG,uLoginIp,uLoginDate,uLoginCount ,a.aId
	    FROM users u 
	    left join roles r on r.rid = u.rid
	    left join arrays a on a.aid = r.aid
	    where
	   	u_id = #{userId} and uType = 4 AND u_id != '1'
   </select>
   
   <!-- 删除角色检测是否关联用户 -->
   <select id="deleteRoleFindUser" parameterType="String" resultType="Integer">
   SELECT COUNT(1) FROM users WHERE rId=#{rId}
   </select>
	
	
   <!-- saveUser -->
   <insert id="saveUser" parameterType="com.op.entity.users.Users" >
   insert into users (uPhone,uPassword,uCreateTime,uLastUpdateTime,uType,ULOGINIP,ULOGINDATE,ULOGINCOUNT,source)
   values (#{uPhone},#{uPassword},#{uCreateTime},#{uCreateTime},#{uType},#{uLoginIp},#{uLoginDate},#{uLoginCount},2)
   </insert>
 
    <!-- 保存系统用户 -->
   <insert id="saveSysUser" parameterType="com.op.entity.users.Users">
   insert into users (uName,uEmail,uPhone,uSex,uHeadImg,uPassword,rId,uCreateTime,uLastUpdateTime,uType,ULOGINIP,ULOGINDATE,ULOGINCOUNT,source)
   values (#{uName},#{uEmail},#{uPhone},#{uSex},#{uHeadImg},#{uPassword},#{rId},#{uCreateTime},#{uCreateTime},#{uType},#{uLoginIp},#{uLoginDate},#{uLoginCount},2)
   </insert>
   
   <!-- checkUserPhoneUnique -->
   <select id="checkUserPhoneUnique" parameterType="String" resultType="Integer">
   select count(1) from users where uPhone=#{uPhone}
   </select>


   <!-- 验证用户名邮箱手机号是否有重复 -->
   <select id="checkUserInfo" parameterType="java.util.HashMap" resultType="Integer">
   		select count(1) from users where 
   		<if test="uName != null and uName != '' ">
   			uName=#{uName}
   		</if> 
   		<if test="uEmail != null and uEmail != '' ">
   			uEmail=#{uEmail}
   		</if> 
   		<if test="uPhone != null and uPhone != '' ">
   			uPhone=#{uPhone}
   		</if> 
   		<if test="uId != null and uId != '' ">
   		   and 	u_id not in (#{uId})
   		</if>
   </select>

   
   <select id="checkUserIsFroZen" parameterType="String" resultType="Integer">
   select isFroZen from users where u_id=#{uId}
   </select>
   
   <update id="updateUserRoleByUid" parameterType="java.util.HashMap">
   update users set rId=#{rId} where u_id=#{uId}
   </update>
   
      <!-- 更改用户冻结 解冻状态 -->
   <update id="updateUserFrozenTypeByUid" parameterType="String">
   		update users set ISFROZEN = case when ISFROZEN = 1 then 2 else 1 end where u_id=#{uId} AND u_id != '1'
   </update>
   
   <!-- 更新用户禁言状态 -->
   <update id="updateUserGAGTypeByUid" parameterType="String">
   		update users set isGAG = case when isGAG = 1 then 2 else 1 end   where u_id=#{uId} AND u_id != '1'
   </update>
 
      <!-- 更新系统用户信息 -->
   <update id="updateSysUser" parameterType="com.op.entity.users.Users">
   		update users set 
   		uLastUpdateTime = now()
   			,uName = #{uName}
   			,uEmail = #{uEmail}
   			,uPhone = #{uPhone}
   			,uSex = #{uSex}
   		<if test="uPassword != null and uPassword != '' ">
   			,uPassword = #{uPassword}
   		</if>  
   		 ,rId = #{rId}
   		  where u_id = #{uId} and  uType = 4
   		  AND u_id != '1'
   </update> 
   
   <!-- 删除系统用户 -->
   <delete id="deleteSysUser" parameterType="String">
   	   delete from users  where u_id = #{uId} and  uType = 4  AND u_id != '1'
   </delete>
   
   <!-- 改变用户登录信息（IP、最后登录时间、登录次数） -->
   <update id="updateUserLoginInfo" parameterType="com.op.entity.users.Users">
   update users set ULOGINIP=#{uLoginIp},uLoginDate=#{uLoginDate},uLoginCount=#{uLoginCount}
   where u_id = #{uId}
   </update>
   
   <!-- 修改系统用户头像 -->
   <update id="updateSysUserAvatar" parameterType="java.util.HashMap">
	   update users set uHeadImg=#{avatarUrl}
	   where u_id = #{userId} and  uType = 4 
   </update>
   
   <!-- 修改系统用户密码 -->
   <update id="updateSysUserPassword" parameterType="java.util.HashMap">
	   update users set uPassword=#{newPassword}
	   where u_id = #{userId} and  uType = 4 and uPassword=#{uPassword}
   </update>
   
      <!-- 更新系统用户头像地址为OSS地址 -->
   <update id="updateSysUserAvatarOssUrl" parameterType="com.op.entity.users.Users">
	   update users set uHeadImg=#{uHeadImg}
	   where u_id = #{uId}  and  uType = 4 
   </update>
   <!-- 用戶资质审核成功，修改用戶身份 -->
   <update id="updateUType" parameterType="java.util.HashMap">
   		update users set uType=
   		(select UCTYPE from user_check where UCID = #{ucId})
	    where u_id = (select U_ID from user_check where UCID = #{ucId})
   </update>
   
   <!-- 用戶资质审核失败，改回用戶身份 -->
   <update id="updateFailUType" parameterType="java.util.HashMap">
   		update users set uType=3
	    where u_id = (select U_ID from user_check where UCID = #{ucId})
   </update>
   
   <!-- 场馆认证修改用户身份 -->
   <update id="updateUTypeForPointService" parameterType="String">
   		update users set 
   		uType = 50
   		where u_id = #{id}
   </update>
   
   
</mapper>